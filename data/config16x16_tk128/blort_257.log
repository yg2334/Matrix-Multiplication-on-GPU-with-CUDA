==PROF== Connected to process 6847 (/home/ubuntu/pa2-nwahi-ygala/mmpy)
==PROF== Profiling "matMul" - 1: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 2: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 3: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 4: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 5: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 6: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 7: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 8: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 9: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 10: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 11: 0%....50%....100% - 32 passes
==PROF== Disconnected from process 6847
[6847] mmpy@127.0.0.1
  matMul(int, float *, float *, float *), 2024-May-13 19:21:42, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.95
    SM Frequency                                                             cycle/usecond                         580.18
    Elapsed Cycles                                                                   cycle                          47257
    Memory [%]                                                                           %                          41.05
    DRAM Throughput                                                                      %                           4.19
    Duration                                                                       usecond                          81.44
    L1/TEX Cache Throughput                                                              %                          79.11
    L2 Cache Throughput                                                                  %                           4.76
    SM Active Cycles                                                                 cycle                       24514.33
    Compute (SM) [%]                                                                     %                          41.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.19
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.02
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.28
    Mem Busy                                                                             %                          31.05
    Max Bandwidth                                                                        %                          41.05
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.16
    Mem Pipes Busy                                                                       %                          41.05
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.86
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.14
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:45, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.91
    SM Frequency                                                             cycle/usecond                         575.53
    Elapsed Cycles                                                                   cycle                          47059
    Memory [%]                                                                           %                          41.22
    DRAM Throughput                                                                      %                           4.20
    Duration                                                                       usecond                          81.76
    L1/TEX Cache Throughput                                                              %                          79.21
    L2 Cache Throughput                                                                  %                           4.78
    SM Active Cycles                                                                 cycle                       24483.58
    Compute (SM) [%]                                                                     %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.82
    Issue Slots Busy                                                                     %                          39.24
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.08
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.22
    Mem Busy                                                                             %                          31.18
    Max Bandwidth                                                                        %                          41.22
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.14
    Mem Pipes Busy                                                                       %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.82
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.18
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:47, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.91
    SM Frequency                                                             cycle/usecond                         575.27
    Elapsed Cycles                                                                   cycle                          47059
    Memory [%]                                                                           %                          41.22
    DRAM Throughput                                                                      %                           4.18
    Duration                                                                       usecond                          81.79
    L1/TEX Cache Throughput                                                              %                          79.10
    L2 Cache Throughput                                                                  %                           4.78
    SM Active Cycles                                                                 cycle                       24518.67
    Compute (SM) [%]                                                                     %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.82
    Issue Slots Busy                                                                     %                          39.18
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.02
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.13
    Mem Busy                                                                             %                          31.18
    Max Bandwidth                                                                        %                          41.22
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.18
    Mem Pipes Busy                                                                       %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.79
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.21
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.10
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:50, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.94
    SM Frequency                                                             cycle/usecond                         578.54
    Elapsed Cycles                                                                   cycle                          47270
    Memory [%]                                                                           %                          41.03
    DRAM Throughput                                                                      %                           4.17
    Duration                                                                       usecond                          81.70
    L1/TEX Cache Throughput                                                              %                          78.98
    L2 Cache Throughput                                                                  %                           4.76
    SM Active Cycles                                                                 cycle                       24557.53
    Compute (SM) [%]                                                                     %                          41.03
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.56
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.12
    Issued Ipc Active                                                           inst/cycle                           1.56
    SM Busy                                                                              %                          41.95
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.0%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.19
    Mem Busy                                                                             %                          31.04
    Max Bandwidth                                                                        %                          41.03
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.30
    Mem Pipes Busy                                                                       %                          41.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.79
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.21
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.10
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:52, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.48
    Elapsed Cycles                                                                   cycle                          47263
    Memory [%]                                                                           %                          41.04
    DRAM Throughput                                                                      %                           4.16
    Duration                                                                       usecond                          81.41
    L1/TEX Cache Throughput                                                              %                          79.11
    L2 Cache Throughput                                                                  %                           4.76
    SM Active Cycles                                                                 cycle                       24516.22
    Compute (SM) [%]                                                                     %                          41.04
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.19
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.02
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.20
    Mem Busy                                                                             %                          31.05
    Max Bandwidth                                                                        %                          41.04
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.34
    Mem Pipes Busy                                                                       %                          41.04
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.84
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.16
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.09
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:54, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.94
    Elapsed Cycles                                                                   cycle                          47300
    Memory [%]                                                                           %                          41.01
    DRAM Throughput                                                                      %                           4.20
    Duration                                                                       usecond                          81.41
    L1/TEX Cache Throughput                                                              %                          79.12
    L2 Cache Throughput                                                                  %                           4.76
    SM Active Cycles                                                                 cycle                       24511.28
    Compute (SM) [%]                                                                     %                          41.01
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.19
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.03
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.35
    Mem Busy                                                                             %                          31.03
    Max Bandwidth                                                                        %                          41.01
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.10
    Mem Pipes Busy                                                                       %                          41.01
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.86
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.14
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.09
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:57, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.98
    SM Frequency                                                             cycle/usecond                         583.29
    Elapsed Cycles                                                                   cycle                          47357
    Memory [%]                                                                           %                          40.96
    DRAM Throughput                                                                      %                           4.19
    Duration                                                                       usecond                          81.18
    L1/TEX Cache Throughput                                                              %                          79.12
    L2 Cache Throughput                                                                  %                           4.75
    SM Active Cycles                                                                 cycle                       24511.12
    Compute (SM) [%]                                                                     %                          40.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.20
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.03
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.37
    Mem Busy                                                                             %                          30.98
    Max Bandwidth                                                                        %                          40.96
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.15
    Mem Pipes Busy                                                                       %                          40.96
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.79
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.21
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.09
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:21:59, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.92
    SM Frequency                                                             cycle/usecond                         576.37
    Elapsed Cycles                                                                   cycle                          47055
    Memory [%]                                                                           %                          41.22
    DRAM Throughput                                                                      %                           4.19
    Duration                                                                       usecond                          81.63
    L1/TEX Cache Throughput                                                              %                          79.14
    L2 Cache Throughput                                                                  %                           4.78
    SM Active Cycles                                                                 cycle                       24505.70
    Compute (SM) [%]                                                                     %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.82
    Issue Slots Busy                                                                     %                          39.20
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.04
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.19
    Mem Busy                                                                             %                          31.18
    Max Bandwidth                                                                        %                          41.22
    L1/TEX Hit Rate                                                                      %                          28.41
    L2 Hit Rate                                                                          %                          86.24
    Mem Pipes Busy                                                                       %                          41.22
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.86
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.14
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.10
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:22:01, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.94
    SM Frequency                                                             cycle/usecond                         578.87
    Elapsed Cycles                                                                   cycle                          47408
    Memory [%]                                                                           %                          40.91
    DRAM Throughput                                                                      %                           4.17
    Duration                                                                       usecond                          81.89
    L1/TEX Cache Throughput                                                              %                          79.03
    L2 Cache Throughput                                                                  %                           4.75
    SM Active Cycles                                                                 cycle                       24541.88
    Compute (SM) [%]                                                                     %                          40.91
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.81
    Issue Slots Busy                                                                     %                          39.15
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          41.98
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.0%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.18
    Mem Busy                                                                             %                          30.95
    Max Bandwidth                                                                        %                          40.91
    L1/TEX Hit Rate                                                                      %                          28.40
    L2 Hit Rate                                                                          %                          86.12
    Mem Pipes Busy                                                                       %                          40.91
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.4 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.84
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.16
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.10
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:22:04, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.92
    SM Frequency                                                             cycle/usecond                         575.88
    Elapsed Cycles                                                                   cycle                          47014
    Memory [%]                                                                           %                          41.26
    DRAM Throughput                                                                      %                           4.19
    Duration                                                                       usecond                          81.63
    L1/TEX Cache Throughput                                                              %                          79.19
    L2 Cache Throughput                                                                  %                           4.79
    SM Active Cycles                                                                 cycle                       24492.38
    Compute (SM) [%]                                                                     %                          41.26
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.82
    Issue Slots Busy                                                                     %                          39.23
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.06
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.18
    Mem Busy                                                                             %                          31.21
    Max Bandwidth                                                                        %                          41.26
    L1/TEX Hit Rate                                                                      %                          28.40
    L2 Hit Rate                                                                          %                          86.11
    Mem Pipes Busy                                                                       %                          41.26
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.80
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.20
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.10
    Warp Cycles Per Executed Instruction                                             cycle                           5.10
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:22:06, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.95
    SM Frequency                                                             cycle/usecond                         578.99
    Elapsed Cycles                                                                   cycle                          47122
    Memory [%]                                                                           %                          41.16
    DRAM Throughput                                                                      %                           4.15
    Duration                                                                       usecond                          81.38
    L1/TEX Cache Throughput                                                              %                          79.20
    L2 Cache Throughput                                                                  %                           4.78
    SM Active Cycles                                                                 cycle                       24486.60
    Compute (SM) [%]                                                                     %                          41.16
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.6 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 14%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.57
    Executed Ipc Elapsed                                                        inst/cycle                           0.82
    Issue Slots Busy                                                                     %                          39.23
    Issued Ipc Active                                                           inst/cycle                           1.57
    SM Busy                                                                              %                          42.07
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (79.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          13.15
    Mem Busy                                                                             %                          31.14
    Max Bandwidth                                                                        %                          41.16
    L1/TEX Hit Rate                                                                      %                          28.42
    L2 Hit Rate                                                                          %                          86.18
    Mem Pipes Busy                                                                       %                          41.16
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.5 sectors per request, or 5.5*32 = 176.1 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.3 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.1 sectors per request, or 5.1*32 = 163.3 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.3 byte accesses would result in 4.3*32 = 138.5 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.3 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.7 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          38.90
    Issued Warp Per Scheduler                                                                                        0.39
    No Eligible                                                                          %                          61.10
    Active Warps Per Scheduler                                                        warp                           1.98
    Eligible Warps Per Scheduler                                                      warp                           0.55
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.6 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.98 active warps per scheduler, but only an average of 0.55 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           5.09
    Warp Cycles Per Executed Instruction                                             cycle                           5.09
    Avg. Active Threads Per Warp                                                                                    27.01
    Avg. Not Predicated Off Threads Per Warp                                                                        25.50
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        9604.07
    Executed Instructions                                                             inst                        1536651
    Avg. Issued Instructions Per Scheduler                                            inst                        9607.19
    Issued Instructions                                                               inst                        1537151
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                          25
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                           6400
    Waves Per SM                                                                                                     0.62
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 25 blocks, which is less than the GPU's 40             
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.97
    Achieved Active Warps Per SM                                                      warp                           7.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                          14979
    Branch Efficiency                                                                    %                          99.20
    Avg. Divergent Branches                                                                                          0.69
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 40832 excessive sectors (31% of the total 
          132715 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source locations.    
          The CUDA Programming Guide                                                                                    
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 147584 excessive wavefronts (28% of the   
          total 518120 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

