==PROF== Connected to process 7229 (/home/ubuntu/pa2-nwahi-ygala/mmpy)
==PROF== Profiling "matMul" - 1: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 2: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 3: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 4: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 5: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 6: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 7: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 8: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 9: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 10: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 11: 0%....50%....100% - 32 passes
==PROF== Disconnected from process 7229
[7229] mmpy@127.0.0.1
  matMul(int, float *, float *, float *), 2024-May-13 19:23:36, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.32
    Elapsed Cycles                                                                   cycle                        1485567
    Memory [%]                                                                           %                          58.31
    DRAM Throughput                                                                      %                           8.11
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.91
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1350455.12
    Compute (SM) [%]                                                                     %                          58.31
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.26
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.19
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.89
    Mem Busy                                                                             %                          44.45
    Max Bandwidth                                                                        %                          58.31
    L1/TEX Hit Rate                                                                      %                          26.69
    L2 Hit Rate                                                                          %                          82.03
    Mem Pipes Busy                                                                       %                          58.31
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.24
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.76
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.39
    Warp Cycles Per Executed Instruction                                             cycle                           6.39
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.8% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:39, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         585.02
    Elapsed Cycles                                                                   cycle                        1485064
    Memory [%]                                                                           %                          58.33
    DRAM Throughput                                                                      %                           7.86
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.94
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1352250.25
    Compute (SM) [%]                                                                     %                          58.33
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.22
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.14
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.14
    Mem Busy                                                                             %                          44.47
    Max Bandwidth                                                                        %                          58.33
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.07
    Mem Pipes Busy                                                                       %                          58.33
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.28
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.72
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.40
    Warp Cycles Per Executed Instruction                                             cycle                           6.40
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.8% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:42, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.45
    Elapsed Cycles                                                                   cycle                        1484278
    Memory [%]                                                                           %                          58.37
    DRAM Throughput                                                                      %                           8.05
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.98
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1352722.15
    Compute (SM) [%]                                                                     %                          58.37
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.21
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.13
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.0%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.71
    Mem Busy                                                                             %                          44.49
    Max Bandwidth                                                                        %                          58.37
    L1/TEX Hit Rate                                                                      %                          26.69
    L2 Hit Rate                                                                          %                          82.04
    Mem Pipes Busy                                                                       %                          58.37
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.22
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.78
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.40
    Warp Cycles Per Executed Instruction                                             cycle                           6.40
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.5 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 54.0% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:45, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         583.84
    Elapsed Cycles                                                                   cycle                        1482608
    Memory [%]                                                                           %                          58.43
    DRAM Throughput                                                                      %                           8.11
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          89.09
    L2 Cache Throughput                                                                  %                           6.89
    SM Active Cycles                                                                 cycle                     1350131.90
    Compute (SM) [%]                                                                     %                          58.43
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.27
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.20
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.87
    Mem Busy                                                                             %                          44.54
    Max Bandwidth                                                                        %                          58.43
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.08
    Mem Pipes Busy                                                                       %                          58.43
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.15
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.85
    Active Warps Per Scheduler                                                        warp                           1.99
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.99 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.40
    Warp Cycles Per Executed Instruction                                             cycle                           6.40
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.5% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:48, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         583.80
    Elapsed Cycles                                                                   cycle                        1484302
    Memory [%]                                                                           %                          58.36
    DRAM Throughput                                                                      %                           8.07
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.99
    L2 Cache Throughput                                                                  %                           6.88
    SM Active Cycles                                                                 cycle                     1351465.35
    Compute (SM) [%]                                                                     %                          58.36
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.24
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.16
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.75
    Mem Busy                                                                             %                          44.49
    Max Bandwidth                                                                        %                          58.36
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.07
    Mem Pipes Busy                                                                       %                          58.36
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.17
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.83
    Active Warps Per Scheduler                                                        warp                           1.99
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.99 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.39
    Warp Cycles Per Executed Instruction                                             cycle                           6.39
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.8% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:50, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         583.82
    Elapsed Cycles                                                                   cycle                        1484112
    Memory [%]                                                                           %                          58.37
    DRAM Throughput                                                                      %                           7.75
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.99
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1350122.73
    Compute (SM) [%]                                                                     %                          58.37
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.27
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.20
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          24.73
    Mem Busy                                                                             %                          44.49
    Max Bandwidth                                                                        %                          58.37
    L1/TEX Hit Rate                                                                      %                          26.71
    L2 Hit Rate                                                                          %                          82.06
    Mem Pipes Busy                                                                       %                          58.37
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.6 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.26
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.74
    Active Warps Per Scheduler                                                        warp                           2.01
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.01 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.41
    Warp Cycles Per Executed Instruction                                             cycle                           6.41
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.4% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:53, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.98
    SM Frequency                                                             cycle/usecond                         583.58
    Elapsed Cycles                                                                   cycle                        1482462
    Memory [%]                                                                           %                          58.44
    DRAM Throughput                                                                      %                           7.98
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          89.09
    L2 Cache Throughput                                                                  %                           6.88
    SM Active Cycles                                                                 cycle                     1346879.18
    Compute (SM) [%]                                                                     %                          58.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.34
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.28
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.3%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.44
    Mem Busy                                                                             %                          44.55
    Max Bandwidth                                                                        %                          58.44
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.01
    Mem Pipes Busy                                                                       %                          58.44
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.28
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.72
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.39
    Warp Cycles Per Executed Instruction                                             cycle                           6.39
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.4% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:56, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.88
    Elapsed Cycles                                                                   cycle                        1485945
    Memory [%]                                                                           %                          58.30
    DRAM Throughput                                                                      %                           7.95
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.89
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1349135.10
    Compute (SM) [%]                                                                     %                          58.30
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.29
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.22
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.2%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.42
    Mem Busy                                                                             %                          44.44
    Max Bandwidth                                                                        %                          58.30
    L1/TEX Hit Rate                                                                      %                          26.69
    L2 Hit Rate                                                                          %                          81.98
    Mem Pipes Busy                                                                       %                          58.30
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.6 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.25
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.75
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.40
    Warp Cycles Per Executed Instruction                                             cycle                           6.40
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.5% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:23:59, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.01
    SM Frequency                                                             cycle/usecond                         586.19
    Elapsed Cycles                                                                   cycle                        1484512
    Memory [%]                                                                           %                          58.36
    DRAM Throughput                                                                      %                           7.93
    Duration                                                                       msecond                           2.53
    L1/TEX Cache Throughput                                                              %                          88.96
    L2 Cache Throughput                                                                  %                           6.88
    SM Active Cycles                                                                 cycle                     1352157.57
    Compute (SM) [%]                                                                     %                          58.36
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.22
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.14
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.41
    Mem Busy                                                                             %                          44.48
    Max Bandwidth                                                                        %                          58.36
    L1/TEX Hit Rate                                                                      %                          26.71
    L2 Hit Rate                                                                          %                          82.04
    Mem Pipes Busy                                                                       %                          58.36
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.30
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.70
    Active Warps Per Scheduler                                                        warp                           2.01
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.01 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.41
    Warp Cycles Per Executed Instruction                                             cycle                           6.41
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.7% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:24:02, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.59
    Elapsed Cycles                                                                   cycle                        1483938
    Memory [%]                                                                           %                          58.38
    DRAM Throughput                                                                      %                           7.80
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          89.01
    L2 Cache Throughput                                                                  %                           6.88
    SM Active Cycles                                                                 cycle                     1351512.02
    Compute (SM) [%]                                                                     %                          58.38
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.23
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.16
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.1%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          24.93
    Mem Busy                                                                             %                          44.50
    Max Bandwidth                                                                        %                          58.38
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.02
    Mem Pipes Busy                                                                       %                          58.38
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.19
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.81
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.40
    Warp Cycles Per Executed Instruction                                             cycle                           6.40
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.5 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 54.0% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 19:24:05, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.69
    Elapsed Cycles                                                                   cycle                        1485146
    Memory [%]                                                                           %                          58.33
    DRAM Throughput                                                                      %                           7.85
    Duration                                                                       msecond                           2.54
    L1/TEX Cache Throughput                                                              %                          88.93
    L2 Cache Throughput                                                                  %                           6.87
    SM Active Cycles                                                                 cycle                     1352586.30
    Compute (SM) [%]                                                                     %                          58.33
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel exhibits low compute throughput and memory bandwidth utilization relative to the peak performance 
          of this device. Achieved compute throughput and/or memory bandwidth below 60.0% of peak typically indicate    
          latency issues. Look at Scheduler Statistics and Warp State Statistics for potential reasons.                 

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 28%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.25
    Executed Ipc Elapsed                                                        inst/cycle                           1.14
    Issue Slots Busy                                                                     %                          31.21
    Issued Ipc Active                                                           inst/cycle                           1.25
    SM Busy                                                                              %                          35.13
    ---------------------------------------------------------------------- --------------- ------------------------------
          LSU is the highest-utilized pipeline (64.0%). It executes load/store memory operations. The pipeline is       
          well-utilized and might become a bottleneck if more work is added. See the Kernel Profiling Guide             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          25.09
    Mem Busy                                                                             %                          44.47
    Max Bandwidth                                                                        %                          58.33
    L1/TEX Hit Rate                                                                      %                          26.70
    L2 Hit Rate                                                                          %                          82.06
    Mem Pipes Busy                                                                       %                          58.33
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.7 sectors per request, or 5.7*32 = 183.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.4 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 5.4 sectors per request, or 5.4*32 = 173.6 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.4 byte accesses would result in 4.4*32 = 139.6 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          31.33
    Issued Warp Per Scheduler                                                                                        0.31
    No Eligible                                                                          %                          68.67
    Active Warps Per Scheduler                                                        warp                           2.00
    Eligible Warps Per Scheduler                                                      warp                           0.42
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 3.2 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          2.00 active warps per scheduler, but only an average of 0.42 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 2.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.39
    Warp Cycles Per Executed Instruction                                             cycle                           6.39
    Avg. Active Threads Per Warp                                                                                    32.00
    Avg. Not Predicated Off Threads Per Warp                                                                        31.96
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 3.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 53.7% of the total average of 6.4 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                      422131.20
    Executed Instructions                                                             inst                       67540992
    Avg. Issued Instructions Per Scheduler                                            inst                      422136.20
    Issued Instructions                                                               inst                       67541792
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        256
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                         256
    Registers Per Thread                                                   register/thread                            128
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                          65536
    Waves Per SM                                                                                                     6.40
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              4
    Theoretical Active Warps per SM                                                   warp                              8
    Theoretical Occupancy                                                                %                             25
    Achieved Occupancy                                                                   %                          24.99
    Achieved Active Warps Per SM                                                      warp                           8.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (25.0%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                         643072
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 1886049 excessive sectors (30% of the     
          total 6207201 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source        
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 6291456 excessive wavefronts (26% of the  
          total 24100864 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

