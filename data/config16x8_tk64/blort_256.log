==PROF== Connected to process 15542 (/home/ubuntu/pa2-nwahi-ygala/mmpy)
==PROF== Profiling "matMul" - 1: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 2: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 3: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 4: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 5: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 6: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 7: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 8: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 9: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 10: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 11: 0%....50%....100% - 32 passes
==PROF== Disconnected from process 15542
[15542] mmpy@127.0.0.1
  matMul(int, float *, float *, float *), 2024-May-13 21:08:17, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.08
    Elapsed Cycles                                                                   cycle                         115993
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.60
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.86
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11480.48
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.95
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.63
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.08
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.34
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.78
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.22
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.28
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.7% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:19, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.83
    Elapsed Cycles                                                                   cycle                         115962
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.65
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11476.95
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.04
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.50
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.78
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.22
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.28
    Warp Cycles Per Executed Instruction                                             cycle                           2.28
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.7% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:22, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.97
    Elapsed Cycles                                                                   cycle                         115972
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11477.62
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.05
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.98
    L2 Hit Rate                                                                          %                          64.16
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:24, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.04
    Elapsed Cycles                                                                   cycle                         115967
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.58
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11476.98
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.06
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.45
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.78
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.22
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:27, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.02
    Elapsed Cycles                                                                   cycle                         115981
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11477.12
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.06
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.22
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:29, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.84
    Elapsed Cycles                                                                   cycle                         115965
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.65
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                          11478
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.04
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.97
    L2 Hit Rate                                                                          %                          64.26
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:31, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.00
    Elapsed Cycles                                                                   cycle                         115977
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.60
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11477.65
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.07
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.97
    L2 Hit Rate                                                                          %                          64.28
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.78
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.22
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:34, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         580.94
    Elapsed Cycles                                                                   cycle                         115965
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.60
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11477.15
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.09
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.76
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.78
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.22
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:36, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.03
    Elapsed Cycles                                                                   cycle                         115984
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.86
    SM Active Cycles                                                                 cycle                       11477.55
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.06
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.99
    L2 Hit Rate                                                                          %                          64.33
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.28
    Warp Cycles Per Executed Instruction                                             cycle                           2.28
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.7% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:39, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.20
    Elapsed Cycles                                                                   cycle                         115998
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.59
    Duration                                                                       usecond                         199.58
    L1/TEX Cache Throughput                                                              %                          50.87
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11477.67
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.96
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.65
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.05
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                          10.00
    L2 Hit Rate                                                                          %                          64.35
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

  matMul(int, float *, float *, float *), 2024-May-13 21:08:41, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.96
    SM Frequency                                                             cycle/usecond                         581.05
    Elapsed Cycles                                                                   cycle                         115987
    Memory [%]                                                                           %                           5.03
    DRAM Throughput                                                                      %                           1.61
    Duration                                                                       usecond                         199.62
    L1/TEX Cache Throughput                                                              %                          50.86
    L2 Cache Throughput                                                                  %                           0.85
    SM Active Cycles                                                                 cycle                       11478.50
    Compute (SM) [%]                                                                     %                           5.90
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel grid is too small to fill the available resources on this device, resulting in only 0.1 full      
          waves across all SMs. Look at Launch Statistics for more details.                                             

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 6% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           1.76
    Executed Ipc Elapsed                                                        inst/cycle                           0.17
    Issue Slots Busy                                                                     %                          43.95
    Issued Ipc Active                                                           inst/cycle                           1.76
    SM Busy                                                                              %                          59.64
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                           5.10
    Mem Busy                                                                             %                           4.33
    Max Bandwidth                                                                        %                           5.03
    L1/TEX Hit Rate                                                                      %                           9.96
    L2 Hit Rate                                                                          %                          64.31
    Mem Pipes Busy                                                                       %                           5.03
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.1 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          43.77
    Issued Warp Per Scheduler                                                                                        0.44
    No Eligible                                                                          %                          56.23
    Active Warps Per Scheduler                                                        warp                           1.00
    Eligible Warps Per Scheduler                                                      warp                           0.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 2.3 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          1.00 active warps per scheduler, which already limits the scheduler to less than a warp per instruction.      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 1.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           2.27
    Warp Cycles Per Executed Instruction                                             cycle                           2.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        31.99
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 1.0 cycles being stalled on a fixed latency execution dependency. 
          This represents about 45.8% of the total average of 2.3 cycles between issuing two instructions. Typically,   
          this stall reason should be very low and only shows up as a top contributor in already highly optimized       
          kernels. Try to hide the corresponding instruction latencies by increasing the number of active warps,        
          restructuring the code or unrolling loops. Furthermore, consider switching to lower-latency instructions,     
          e.g. by making use of fast math compiler options.                                                             
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                        5044.80
    Executed Instructions                                                             inst                         807168
    Avg. Issued Instructions Per Scheduler                                            inst                        5045.20
    Issued Instructions                                                               inst                         807232
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                           4
    Registers Per Thread                                                   register/thread                            255
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                            512
    Waves Per SM                                                                                                     0.10
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   The grid for this launch is configured to execute only 4 blocks, which is less than the GPU's 40              
          multiprocessors. This can underutilize some multiprocessors. If you do not intend to execute this kernel      
          concurrently with other workloads, consider reducing the block size to have at least one block per            
          multiprocessor or increase the size of the grid to fully utilize the available hardware resources. See the    
          Hardware Model (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-hw-model)            
          description for more details on launch configurations.                                                        

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              2
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              8
    Theoretical Active Warps per SM                                                   warp                              4
    Theoretical Occupancy                                                                %                          12.50
    Achieved Occupancy                                                                   %                          12.50
    Achieved Active Warps Per SM                                                      warp                           4.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (12.5%) is limited by the required amount of shared memory See the CUDA   
          Best Practices Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for      
          more details on optimizing occupancy.                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.01
    Branch Instructions                                                               inst                           4400
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 73728 excessive wavefronts (41% of the    
          total 180224 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.    
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

