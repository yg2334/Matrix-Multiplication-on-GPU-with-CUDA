==PROF== Connected to process 13471 (/home/ubuntu/pa2-nwahi-ygala/mmpy)
==PROF== Profiling "matMul" - 1: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 2: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 3: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 4: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 5: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 6: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 7: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 8: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 9: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 10: 0%....50%....100% - 32 passes
==PROF== Profiling "matMul" - 11: 0%....50%....100% - 32 passes
==PROF== Disconnected from process 13471
[13471] mmpy@127.0.0.1
  matMul(int, float *, float *, float *), 2024-May-13 20:33:17, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.98
    Elapsed Cycles                                                                   cycle                       48802935
    Memory [%]                                                                           %                          92.76
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.43
    L1/TEX Cache Throughput                                                              %                          94.02
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48289950.85
    Compute (SM) [%]                                                                     %                          92.76
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.50
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.76
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.85
    Mem Pipes Busy                                                                       %                          92.76
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:33:35, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           4.99
    SM Frequency                                                             cycle/usecond                         584.87
    Elapsed Cycles                                                                   cycle                       48806850
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.70
    Duration                                                                       msecond                          83.45
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48294031.95
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.42
    Mem Busy                                                                             %                          47.00
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.85
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.29
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.71
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:33:53, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.98
    Elapsed Cycles                                                                   cycle                       48804240
    Memory [%]                                                                           %                          92.76
    DRAM Throughput                                                                      %                          11.72
    Duration                                                                       msecond                          83.43
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48293633.38
    Compute (SM) [%]                                                                     %                          92.76
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.48
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.76
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.86
    Mem Pipes Busy                                                                       %                          92.76
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:34:12, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         585.02
    Elapsed Cycles                                                                   cycle                       48807625
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.72
    Duration                                                                       msecond                          83.43
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48291006.45
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.48
    Mem Busy                                                                             %                          47.00
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.86
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:34:30, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         585.02
    Elapsed Cycles                                                                   cycle                       48804711
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.75
    Duration                                                                       msecond                          83.42
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48291969.45
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.56
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.86
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:34:49, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         585.11
    Elapsed Cycles                                                                   cycle                       48807418
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.42
    L1/TEX Cache Throughput                                                              %                          94.00
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48288492.77
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.31
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.46
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.50
    Mem Busy                                                                             %                          47.00
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.87
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:35:07, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.94
    Elapsed Cycles                                                                   cycle                       48798554
    Memory [%]                                                                           %                          92.77
    DRAM Throughput                                                                      %                          11.75
    Duration                                                                       msecond                          83.42
    L1/TEX Cache Throughput                                                              %                          94.02
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48300269.50
    Compute (SM) [%]                                                                     %                          92.77
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.29
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.56
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.77
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.86
    Mem Pipes Busy                                                                       %                          92.77
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:35:26, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.95
    Elapsed Cycles                                                                   cycle                       48805003
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.43
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48294317.15
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.52
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.88
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.29
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.71
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:35:44, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.97
    Elapsed Cycles                                                                   cycle                       48807882
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.44
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48298087.77
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.29
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.44
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.49
    Mem Busy                                                                             %                          47.00
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.84
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.30
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.70
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:36:03, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         585.09
    Elapsed Cycles                                                                   cycle                       48816036
    Memory [%]                                                                           %                          92.73
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.43
    L1/TEX Cache Throughput                                                              %                          93.99
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48290922.50
    Compute (SM) [%]                                                                     %                          92.73
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.50
    Mem Busy                                                                             %                          47.00
    Max Bandwidth                                                                        %                          92.73
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.87
    Mem Pipes Busy                                                                       %                          92.73
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.8 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.29
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.71
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

  matMul(int, float *, float *, float *), 2024-May-13 20:36:21, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           5.00
    SM Frequency                                                             cycle/usecond                         584.89
    Elapsed Cycles                                                                   cycle                       48805867
    Memory [%]                                                                           %                          92.75
    DRAM Throughput                                                                      %                          11.73
    Duration                                                                       msecond                          83.44
    L1/TEX Cache Throughput                                                              %                          94.01
    L2 Cache Throughput                                                                  %                           6.77
    SM Active Cycles                                                                 cycle                    48295305.10
    Compute (SM) [%]                                                                     %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   The kernel is utilizing greater than 80.0% of the available compute or memory performance of the device. To   
          further improve performance, work will likely need to be shifted from the most utilized to another unit.      
          Start by analyzing workloads in the Compute Workload Analysis section.                                        

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 32:1. The kernel achieved 55%   
          of this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide    
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.33
    Executed Ipc Elapsed                                                        inst/cycle                           2.31
    Issue Slots Busy                                                                     %                          58.30
    Issued Ipc Active                                                           inst/cycle                           2.33
    SM Busy                                                                              %                          63.45
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   LSU is the highest-utilized pipeline (93.7%). It executes load/store memory operations. The pipeline is       
          over-utilized and likely a performance bottleneck. See the Kernel Profiling Guide                             
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#metrics-decoder) or hover over the          
          pipeline name to understand the workloads handled by each pipeline. The Instruction Statistics section shows  
          the mix of executed instructions in this kernel. Check the Warp State Statistics section for which reasons    
          cause warps to stall.                                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          37.49
    Mem Busy                                                                             %                          47.01
    Max Bandwidth                                                                        %                          92.75
    L1/TEX Hit Rate                                                                      %                          12.71
    L2 Hit Rate                                                                          %                          64.86
    Mem Pipes Busy                                                                       %                          92.75
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.8 sectors per request, or 4.8*32 = 155.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global stores.                                                                                    
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for global loads in L1TEX might not be optimal. On average, this kernel accesses    
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 4.4 sectors per request, or 4.4*32 = 140.7 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 128.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance. Check the Source Counters section for             
          uncoalesced global loads.                                                                                     
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.9 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.4 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          58.29
    Issued Warp Per Scheduler                                                                                        0.58
    No Eligible                                                                          %                          41.71
    Active Warps Per Scheduler                                                        warp                           4.00
    Eligible Warps Per Scheduler                                                      warp                           1.19
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   Every scheduler is capable of issuing one instruction per cycle, but for this kernel each scheduler only      
          issues an instruction every 1.7 cycles. This might leave hardware resources underutilized and may lead to     
          less optimal performance. Out of the maximum of 8 warps per scheduler, this kernel allocates an average of    
          4.00 active warps per scheduler, but only an average of 1.19 warps were eligible per cycle. Eligible warps    
          are the subset of active warps that are ready to issue their next instruction. Every cycle with no eligible   
          warp results in no instruction being issued and the issue slot remains unused. To increase the number of      
          eligible warps, avoid possible load imbalances due to highly different execution durations per warp.          
          Reducing stalls indicated on the Warp State Statistics and Source Counters sections can help, too.            
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The 4.00 theoretical warps per scheduler this kernel can issue according to its occupancy are below the       
          hardware maximum of 8. Use the Occupancy section to identify what limits this kernel's theoretical occupancy. 

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                           6.86
    Warp Cycles Per Executed Instruction                                             cycle                           6.86
    Avg. Active Threads Per Warp                                                                                    31.12
    Avg. Not Predicated Off Threads Per Warp                                                                        31.05
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 2.4 cycles being stalled waiting for an MIO instruction queue to  
          be not full. This represents about 35.6% of the total average of 6.9 cycles between issuing two               
          instructions. This stall reason is high in cases of utilization of the MIO pipelines, which include special   
          math instructions, dynamic branches, as well as shared memory instructions. When caused by shared memory      
          accesses, trying to use fewer but wider loads can reduce pipeline pressure.                                   
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                    28154644.52
    Executed Instructions                                                             inst                     4504743124
    Avg. Issued Instructions Per Scheduler                                            inst                    28154654.52
    Issued Instructions                                                               inst                     4504744724
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        512
    Function Cache Configuration                                                                cudaFuncCachePreferShared
    Grid Size                                                                                                        1089
    Registers Per Thread                                                   register/thread                             96
    Shared Memory Configuration Size                                                 Kbyte                          65.54
    Driver Shared Memory Per Block                                              byte/block                              0
    Dynamic Shared Memory Per Block                                            Kbyte/block                          65.54
    Static Shared Memory Per Block                                              byte/block                              0
    Threads                                                                         thread                         557568
    Waves Per SM                                                                                                    27.23
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                              1
    Block Limit Shared Mem                                                           block                              1
    Block Limit Warps                                                                block                              2
    Theoretical Active Warps per SM                                                   warp                             16
    Theoretical Occupancy                                                                %                             50
    Achieved Occupancy                                                                   %                          49.99
    Achieved Active Warps Per SM                                                      warp                          16.00
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel's theoretical occupancy (50.0%) is limited by the required amount of shared memory This kernel's  
          theoretical occupancy (50.0%) is limited by the number of required registers See the CUDA Best Practices      
          Guide (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#occupancy) for more details on     
          optimizing occupancy.                                                                                         

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.02
    Branch Instructions                                                               inst                       73940755
    Branch Efficiency                                                                    %                          99.95
    Avg. Divergent Branches                                                                                        208.41
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced global accesses resulting in a total of 30736384 excessive sectors (18% of the    
          total 171554371 sectors). Check the L2 Theoretical Sectors Global Excessive table for the primary source      
          locations. The CUDA Programming Guide                                                                         
          (https://docs.nvidia.com/cuda/cuda-c-programming-guide/index.html#device-memory-accesses) had additional      
          information on reducing uncoalesced device memory accesses.                                                   

